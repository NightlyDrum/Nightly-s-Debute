function UIManager:AddToggle(config)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(0, 100, 0, 30) -- Smaller size for the toggle box
    toggleFrame.Position = UDim2.new(0, 5, 0, 5) -- Position the toggle frame to the far left with some space
    toggleFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    toggleFrame.BorderColor3 = Color3.fromRGB(105, 0, 157)

    local toggleLabel = Instance.new("TextLabel")
    toggleLabel.Size = UDim2.new(1, -35, 1, 0) -- Adjusted size to fit in the toggle frame
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.Text = config.Name or "Toggle"
    toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleLabel.Font = Enum.Font.SourceSans
    toggleLabel.TextScaled = true
    toggleLabel.Parent = toggleFrame

    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 25, 0, 25) -- Smaller toggle button size
    toggleButton.Position = UDim2.new(1, -30, 0.5, -12.5) -- Position the button to the right of the label
    toggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    toggleButton.BorderColor3 = Color3.fromRGB(105, 0, 157)
    toggleButton.Text = ""
    toggleButton.Parent = toggleFrame

    local isToggled = config.Default or false
    toggleButton.BackgroundColor3 = isToggled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)

    toggleButton.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        toggleButton.BackgroundColor3 = isToggled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        if config.Callback then
            config.Callback(isToggled)
        end
    end)

    toggleFrame.Parent = self.ContentFrame:FindFirstChild(config.Tab .. "_Content") -- Add toggle to the specific tab content

    return toggleFrame
end
