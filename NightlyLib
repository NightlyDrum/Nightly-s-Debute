local UIManager = {}
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Create a ScreenGui and MainContainer
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local MainContainer = Instance.new("Frame")
MainContainer.Name = "MainContainer"
MainContainer.Parent = ScreenGui
MainContainer.AnchorPoint = Vector2.new(0.5, 0.5)
MainContainer.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
MainContainer.BorderSizePixel = 0
MainContainer.Position = UDim2.new(0.5, 0, 0.5, 0)
MainContainer.Size = UDim2.new(0.5, 0, 0.5, 0)

-- Create the Topbar
local TopbarFrame = Instance.new("Frame")
TopbarFrame.Name = "TopbarFrame"
TopbarFrame.Parent = MainContainer
TopbarFrame.AnchorPoint = Vector2.new(0.5, 0.5)
TopbarFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
TopbarFrame.BorderSizePixel = 0
TopbarFrame.Position = UDim2.new(0.5, 0, 0.0504, 0)
TopbarFrame.Size = UDim2.new(1, 0, 0.1, 0)

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = TopbarFrame
UIListLayout.FillDirection = Enum.FillDirection.Horizontal
UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
UIListLayout.Padding = UDim.new(0, 5)

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Parent = TopbarFrame
TitleLabel.BackgroundTransparency = 1
TitleLabel.Position = UDim2.new(0.0129, 0, 0, 0)
TitleLabel.Size = UDim2.new(0, 200, 0, 40)
TitleLabel.Font = Enum.Font.FredokaOne
TitleLabel.Text = "Nightly's Debute |"
TitleLabel.TextColor3 = Color3.fromRGB(255, 51, 255)
TitleLabel.TextSize = 14

-- Create the TabHolder for content
local TabHolderFrame = Instance.new("Frame")
TabHolderFrame.Name = "TabHolderFrame"
TabHolderFrame.Parent = MainContainer
TabHolderFrame.AnchorPoint = Vector2.new(0.5, 0)
TabHolderFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
TabHolderFrame.BorderSizePixel = 0
TabHolderFrame.Position = UDim2.new(0.5, 0, 0.15, 0)
TabHolderFrame.Size = UDim2.new(0.95, 0, 0.85, 0)

-- Function to create a new tab
function UIManager.MakeTab(tabInfo)
    local TabButton = Instance.new("TextButton")
    TabButton.Size = UDim2.new(0, 100, 0, 50)
    TabButton.Text = tabInfo.Name
    TabButton.BackgroundTransparency = 1
    TabButton.Parent = TopbarFrame

    local ContentFrame = Instance.new("Frame")
    ContentFrame.Size = UDim2.new(1, 0, 1, 0)
    ContentFrame.BackgroundTransparency = 1
    ContentFrame.Parent = TabHolderFrame

    TabButton.MouseButton1Click:Connect(function()
        for _, child in ipairs(TabHolderFrame:GetChildren()) do
            if child:IsA("Frame") then
                child:Destroy()
            end
        end
        
        -- Call the provided callback function
        tabInfo.Callback(ContentFrame)
    end)

    return TabButton
end

function UIManager.CreateSlider(parent, sliderName, minValue, maxValue, initialValue)
    local SliderFrame = Instance.new("Frame")
    SliderFrame.Size = UDim2.new(1, 0, 0, 40) -- Keep a fixed height for the slider frame
    SliderFrame.BackgroundTransparency = 1 -- Make the slider frame transparent
    SliderFrame.Parent = parent

    local sliderLabel = Instance.new("TextLabel")
    sliderLabel.Size = UDim2.new(0.5, 0, 0, 20) -- Adjust label height and make it smaller
    sliderLabel.Position = UDim2.new(0, 0, 0, 5) -- Position the label
    sliderLabel.BackgroundTransparency = 1 -- Make the label transparent
    sliderLabel.Text = sliderName .. ": " .. initialValue
    sliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    sliderLabel.Parent = SliderFrame

    local SliderBar = Instance.new("Frame")
    SliderBar.Size = UDim2.new(0.3, 0, 0, 5) -- Smaller slider bar width
    SliderBar.Position = UDim2.new(0.1, 0, 0, 30) -- Position closer to the label
    SliderBar.BackgroundColor3 = Color3.fromRGB(100, 100, 100) -- Background color of the slider bar
    SliderBar.Parent = SliderFrame

    local SliderIndicator = Instance.new("Frame")
    SliderIndicator.Size = UDim2.new(0, 10, 1, 0) -- Width of the slider indicator
    SliderIndicator.Position = UDim2.new(initialValue / maxValue, -5, 0, 0)
    SliderIndicator.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Color of the indicator
    SliderIndicator.Parent = SliderBar

    local Fill = Instance.new("Frame")
    Fill.Size = UDim2.new(initialValue / maxValue, 0, 1, 0) -- Filling based on initial value
    Fill.Position = UDim2.new(0, 0, 0, 0)
    Fill.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Fill color
    Fill.Parent = SliderBar

    -- Slider Dragging Logic
    local dragging = false
    SliderBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    SliderBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    SliderBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
            local mousePos = input.Position.X
            local sliderPos = SliderBar.AbsolutePosition.X
            local sliderSize = SliderBar.AbsoluteSize.X
            local value = math.clamp((mousePos - sliderPos) / sliderSize, 0, 1)
            SliderIndicator.Position = UDim2.new(value, -5, 0, 0)
            Fill.Size = UDim2.new(value, 0, 1, 0) -- Update the fill size
            local newValue = math.floor(value * (maxValue - minValue) + minValue)
            sliderLabel.Text = sliderName .. ": " .. newValue
        end
    end)

    return SliderFrame
end

-- Function to create a toggle
function UIManager.CreateToggle(container, label, initialState, callback)
	local ToggleLabel = Instance.new("TextLabel")
	ToggleLabel.Size = UDim2.new(0, 150, 0, 50) -- Adjust as necessary
	ToggleLabel.Text = label
	ToggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	ToggleLabel.BackgroundTransparency = 1
	ToggleLabel.Parent = container

	local ToggleBox = Instance.new("Frame")
	ToggleBox.Size = UDim2.new(0, 30, 0, 30) -- Size of the toggle box
	ToggleBox.Position = UDim2.new(0, 0, 0, 10) -- Position next to the label
	ToggleBox.BackgroundColor3 = initialState and Color3.fromRGB(255, 105, 180) or Color3.fromRGB(40, 40, 40) -- Color based on state
	ToggleBox.Parent = container

	local UICorner = Instance.new("UICorner")
	UICorner.CornerRadius = UDim.new(0, 5)
	UICorner.Parent = ToggleBox

	-- Function to update toggle state
	local function updateToggle()
		ToggleBox.BackgroundColor3 = ToggleBox.BackgroundColor3 == Color3.fromRGB(40, 40, 40) and Color3.fromRGB(255, 105, 180) or Color3.fromRGB(40, 40, 40)
		callback(ToggleBox.BackgroundColor3 == Color3.fromRGB(255, 105, 180))
	end

	-- Connect click event to toggle state
	ToggleBox.MouseButton1Click:Connect(updateToggle)
	updateToggle() -- Initialize with the correct state
end

-- Function to create notifications
function UIManager.CreateNotification(message, duration)
	local ScreenGui = game.Players.LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	local NotificationFrame = Instance.new("Frame")
	NotificationFrame.Size = UDim2.new(0, 150, 0, 50)
	NotificationFrame.Position = UDim2.new(1, 0, 1, -60)
	NotificationFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	NotificationFrame.BorderSizePixel = 0
	NotificationFrame.BackgroundTransparency = 0.8
	NotificationFrame.Parent = ScreenGui

	local UICorner = Instance.new("UICorner")
	UICorner.CornerRadius = UDim.new(0, 5)
	UICorner.Parent = NotificationFrame

	local NotificationText = Instance.new("TextLabel")
	NotificationText.Size = UDim2.new(1, 0, 1, 0)
	NotificationText.Position = UDim2.new(0, 0, 0, 0)
	NotificationText.Text = message
	NotificationText.TextColor3 = Color3.fromRGB(255, 105, 180)
	NotificationText.Font = Enum.Font.SourceSansBold
	NotificationText.TextScaled = true
	NotificationText.BackgroundTransparency = 1
	NotificationText.Parent = NotificationFrame

	NotificationFrame.Position = UDim2.new(1, 0, 1, -60) -- Start off-screen
	local tweenIn = TweenService:Create(NotificationFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position = UDim2.new(1, -160, 1, -60), BackgroundTransparency = 0.8})
	tweenIn:Play()

	task.delay(duration or 3, function()
		local tweenOut = TweenService:Create(NotificationFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position = UDim2.new(1, 0, 1, -60), BackgroundTransparency = 1})
		tweenOut:Play()
		tweenOut.Completed:Connect(function()
			NotificationFrame:Destroy()
		end)
	end)
end

return UIManager
